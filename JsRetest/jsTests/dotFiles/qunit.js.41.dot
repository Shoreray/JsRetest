digraph {
"0" [label="[1209]: var stack, include, i, regex;\n"] 
"1" [label="[1222]: for (i = offset; i < stack.length; i++) "] 
"2" [label="[1238]: return;\n"] 
"3" [label="[1211]: if (e.stacktrace) "] 
"4" [label="[1218]: stack.shift();\n"] 
"5" [label="[1237]: if (/qunit.js$/.test(e.sourceURL)) "] 
"6" [label="[1216]: stack = e.stack.split(\"\n\");\n"] 
"7" [label="[1221]: include = [];\n"] 
"8" [label="[1213]: return e.stacktrace.split(\"\n\")[offset + 3];\n"] 
"9" [label="[1232]: return stack[offset];\n"] 
"10" [label="[1233]: if (e.sourceURL) "] 
"11" [label="[1228]: if (include.length) "] 
"12" [label="[0]: entry"] 
"13" [label="[-1]: exit"] 
"14" [label="[1207]: offset = offset === undefined ? 3 : offset;\n"] 
"15" [label="[1220]: if (fileName) "] 
"16" [label="[1241]: return e.sourceURL + \":\" + e.line;\n"] 
"17" [label="[1224]: break;\n"] 
"18" [label="[1226]: include.push(stack[i]);\n"] 
"19" [label="[1223]: if (stack[i].indexOf(fileName) != -1) "] 
"20" [label="[1229]: return include.join(\"\n\");\n"] 
"21" [label="[1217]: if (/^error$/i.test(stack[0])) "] 
"22" [label="[1214]: if (e.stack) "] 
"0" -> "3" [label=""] 
"1" -> "11" [label="false"] 
"1" -> "19" [label="true"] 
"2" -> "13" [label=""] 
"3" -> "8" [label="true"] 
"3" -> "22" [label="false"] 
"4" -> "15" [label=""] 
"5" -> "2" [label="true"] 
"5" -> "16" [label="false"] 
"6" -> "21" [label=""] 
"7" -> "1" [label=""] 
"8" -> "13" [label=""] 
"9" -> "13" [label=""] 
"10" -> "5" [label="true"] 
"10" -> "13" [label="false"] 
"11" -> "20" [label="true"] 
"11" -> "9" [label="false"] 
"12" -> "14" [label=""] 
"14" -> "0" [label=""] 
"15" -> "7" [label="true"] 
"15" -> "9" [label="false"] 
"16" -> "13" [label=""] 
"17" -> "11" [label=""] 
"18" -> "1" [label=""] 
"19" -> "17" [label="true"] 
"19" -> "18" [label="false"] 
"20" -> "13" [label=""] 
"21" -> "4" [label="true"] 
"21" -> "15" [label="false"] 
"22" -> "6" [label="true"] 
"22" -> "10" [label="false"] 
}
