digraph {
"0" [label="[245]: for (i = 0; i < this.assertions.length; i++) "] 
"1" [label="[196]: bad++;\n"] 
"2" [label="[179]: config.moduleStats.all += this.assertions.length;\n"] 
"3" [label="[249]: config.moduleStats.bad++;\n"] 
"4" [label="[164]: if (config.requireExpects && this.expected == null) "] 
"5" [label="[248]: config.stats.bad++;\n"] 
"6" [label="[225]: addEvent(b, \"dblclick\", function(e) );\n"] 
"7" [label="[190]: li.innerHTML = assertion.message || (assertion.result ? \"okay\" : \"failed\");\n"] 
"8" [label="[205]: sessionStorage.setItem(\"qunit-test-\" + this.module + \"-\" + this.testName, bad);\n"] 
"9" [label="[194]: good++;\n"] 
"10" [label="[217]: b.innerHTML = this.name + \" <b class='counts'>(<b class='failed'>\" + bad + \"</b>, <b class='passed'>\" + good + \"</b>, \" + this.assertions.length + \")</b>\";\n"] 
"11" [label="[-1]: exit"] 
"12" [label="[238]: li.removeChild(li.firstChild);\n"] 
"13" [label="[219]: addEvent(b, \"click\", function() );\n"] 
"14" [label="[168]: if (this.expected == null && !this.assertions.length) "] 
"15" [label="[198]: config.moduleStats.bad++;\n"] 
"16" [label="[211]: if (bad === 0) "] 
"17" [label="[212]: addClass(ol, \"qunit-collapsed\");\n"] 
"18" [label="[188]: li = document.createElement(\"li\");\n"] 
"19" [label="[182]: ol = document.createElement(\"ol\");\n"] 
"20" [label="[216]: b = document.createElement(\"strong\");\n"] 
"21" [label="[193]: if (assertion.result) "] 
"22" [label="[197]: config.stats.bad++;\n"] 
"23" [label="[186]: assertion = this.assertions[i];\n"] 
"24" [label="[207]: sessionStorage.removeItem(\"qunit-test-\" + this.module + \"-\" + this.testName);\n"] 
"25" [label="[185]: for (i = 0; i < this.assertions.length; i++) "] 
"26" [label="[240]: li.appendChild(b);\n"] 
"27" [label="[242]: li.appendChild(ol);\n"] 
"28" [label="[178]: config.stats.all += this.assertions.length;\n"] 
"29" [label="[181]: if (tests) "] 
"30" [label="[246]: if (!this.assertions[i].result) "] 
"31" [label="[169]: QUnit.pushFailure(\"Expected at least one assertion, but none were run - call expect(0) to accept zero assertions.\", this.stack);\n"] 
"32" [label="[247]: bad++;\n"] 
"33" [label="[236]: li = id(this.id);\n"] 
"34" [label="[183]: ol.className = \"qunit-assert-list\";\n"] 
"35" [label="[167]: QUnit.pushFailure(\"Expected \" + this.expected + \" assertions, but \" + this.assertions.length + \" were run\", this.stack);\n"] 
"36" [label="[239]: a = li.firstChild;\n"] 
"37" [label="[264]: config.current = undefined;\n"] 
"38" [label="[165]: QUnit.pushFailure(\"Expected number of assertions to be defined, but expect() was not called.\", this.stack);\n"] 
"39" [label="[166]: if (this.expected != null && this.expected != this.assertions.length) "] 
"40" [label="[189]: li.className = assertion.result ? \"pass\" : \"fail\";\n"] 
"41" [label="[241]: li.appendChild(a);\n"] 
"42" [label="[204]: if (bad) "] 
"43" [label="[237]: li.className = bad ? \"fail\" : \"pass\";\n"] 
"44" [label="[191]: ol.appendChild(li);\n"] 
"45" [label="[163]: config.current = this;\n"] 
"46" [label="[203]: if (QUnit.config.reorder && defined.sessionStorage) "] 
"47" [label="[172]: var assertion, a, b, i, li, ol, test = this, good = 0, bad = 0, tests = id(\"qunit-tests\");\n"] 
"48" [label="[0]: entry"] 
"49" [label="[254]: runLoggingCallbacks(\"testDone\", QUnit, {name: this.testName, module: this.module, failed: bad, passed: this.assertions.length - bad, total: this.assertions.length});\n"] 
"50" [label="[262]: QUnit.reset();\n"] 
"0" -> "49" [label="false" color="green"] 
"0" -> "30" [label="true" color="green"] 
"1" -> "22" [label="" color="green"] 
"2" -> "29" [label="" color="green"] 
"3" -> "0" [label="" color="green"] 
"4" -> "38" [label="true" color="green"] 
"4" -> "39" [label="false" color="green"] 
"5" -> "3" [label="" color="green"] 
"6" -> "33" [label="" color="green"] 
"7" -> "44" [label="" color="green"] 
"8" -> "16" [label="" color="green"] 
"9" -> "25" [label="" color="green"] 
"10" -> "13" [label="" color="green"] 
"12" -> "36" [label="" color="green"] 
"13" -> "6" [label="" color="green"] 
"14" -> "31" [label="true" color="green"] 
"14" -> "47" [label="false" color="green"] 
"15" -> "25" [label="" color="green"] 
"16" -> "17" [label="true" color="green"] 
"16" -> "20" [label="false" color="green"] 
"17" -> "20" [label="" color="green"] 
"18" -> "40" [label="" color="green"] 
"19" -> "34" [label="" color="green"] 
"20" -> "10" [label="" color="green"] 
"21" -> "9" [label="true" color="green"] 
"21" -> "1" [label="false" color="green"] 
"22" -> "15" [label="" color="green"] 
"23" -> "18" [label="" color="green"] 
"24" -> "16" [label="" color="green"] 
"25" -> "46" [label="false" color="green"] 
"25" -> "23" [label="true" color="green"] 
"26" -> "41" [label="" color="green"] 
"27" -> "49" [label="" color="green"] 
"28" -> "2" [label="" color="green"] 
"29" -> "19" [label="true" color="green"] 
"29" -> "0" [label="false" color="green"] 
"30" -> "32" [label="true" color="green"] 
"30" -> "0" [label="false" color="green"] 
"31" -> "47" [label="" color="green"] 
"32" -> "5" [label="" color="green"] 
"33" -> "43" [label="" color="green"] 
"34" -> "25" [label="" color="green"] 
"35" -> "47" [label="" color="green"] 
"36" -> "26" [label="" color="green"] 
"37" -> "11" [label="" color="green"] 
"38" -> "47" [label="" color="green"] 
"39" -> "35" [label="true" color="green"] 
"39" -> "14" [label="false" color="green"] 
"40" -> "7" [label="" color="green"] 
"41" -> "27" [label="" color="green"] 
"42" -> "8" [label="true" color="green"] 
"42" -> "24" [label="false" color="green"] 
"43" -> "12" [label="" color="green"] 
"44" -> "21" [label="" color="green"] 
"45" -> "4" [label="" color="green"] 
"46" -> "42" [label="true" color="green"] 
"46" -> "16" [label="false" color="green"] 
"47" -> "28" [label="" color="green"] 
"48" -> "45" [label="" color="green"] 
"49" -> "50" [label="" color="green"] 
"50" -> "37" [label="" color="green"] 
}
