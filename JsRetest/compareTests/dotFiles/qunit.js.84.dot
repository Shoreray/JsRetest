digraph {
"0" [label="[1656]: return res;\n"] 
"1" [label="[1653]: stack.push(obj);\n"] 
"2" [label="[1642]: stack = stack || [];\n"] 
"3" [label="[1646]: type = typeof parser;\n"] 
"4" [label="[1654]: res = parser.call(this, obj, stack);\n"] 
"5" [label="[-1]: exit"] 
"6" [label="[1649]: if (inStack != -1) "] 
"7" [label="[1643]: var inStack, res, parser = this.parsers[type || this.typeOf(obj)];\n"] 
"8" [label="[1647]: inStack = inArray(obj, stack);\n"] 
"9" [label="[0]: entry"] 
"10" [label="[1652]: if (type == \"function\") "] 
"11" [label="[1650]: return \"recursion(\" + (inStack - stack.length) + \")\";\n"] 
"12" [label="[1658]: return (type == \"string\") ? parser : this.parsers.error;\n"] 
"13" [label="[1655]: stack.pop();\n"] 
"0" -> "5" [label="" color="green"] 
"1" -> "4" [label="" color="green"] 
"2" -> "7" [label="" color="green"] 
"3" -> "8" [label="" color="green"] 
"4" -> "13" [label="" color="green"] 
"6" -> "11" [label="true" color="green"] 
"6" -> "10" [label="false" color="green"] 
"7" -> "3" [label="" color="green"] 
"8" -> "6" [label="" color="green"] 
"9" -> "2" [label="" color="green"] 
"10" -> "1" [label="true" color="green"] 
"10" -> "12" [label="false" color="green"] 
"11" -> "5" [label="" color="green"] 
"12" -> "5" [label="" color="green"] 
"13" -> "0" [label="" color="green"] 
}
